
# ci/pipeline.yml
#
# DO NOT MAKE CHANGES TO THIS FILE. Instead, modify ci/pipeline.yml.erb and
# execute build-pipeline-yml.
#
# created: 2018-10-01T17:33:01+09:00
#
resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource

- name: file-url
  type: docker-image
  source:
    repository: pivotalservices/concourse-curl-resource
    tag: latest

resources:
- name: ubuntu-18.04
  type: docker-image
  source:
    repository: ubuntu
    tag: "18.04"

- name: kubernetes-resource
  type: git
  source:
    uri: git://github.com/zlabjp/kubernetes-resource.git
    branch: master

- name: kubernetes-resource-release
  type: git
  source:
    uri: git://github.com/zlabjp/kubernetes-resource.git
    branch: master
    tag_filter: v*

- name: notify
  type: slack-notification
  source:
    url: ((slack-url))


- name: kubernetes-resource-image-1.6
  type: docker-image
  source:
    repository: zlabjp/kubernetes-resource
    tag: "1.6"
    username: ((docker-username))
    password: ((docker-password))

- name: kubernetes-resource-image-1.7
  type: docker-image
  source:
    repository: zlabjp/kubernetes-resource
    tag: "1.7"
    username: ((docker-username))
    password: ((docker-password))

- name: kubernetes-resource-image-1.8
  type: docker-image
  source:
    repository: zlabjp/kubernetes-resource
    tag: "1.8"
    username: ((docker-username))
    password: ((docker-password))

- name: kubernetes-resource-image-1.9
  type: docker-image
  source:
    repository: zlabjp/kubernetes-resource
    tag: "1.9"
    username: ((docker-username))
    password: ((docker-password))

- name: kubernetes-resource-image-1.10
  type: docker-image
  source:
    repository: zlabjp/kubernetes-resource
    tag: "1.10"
    username: ((docker-username))
    password: ((docker-password))

- name: kubernetes-resource-image-1.11
  type: docker-image
  source:
    repository: zlabjp/kubernetes-resource
    tag: "1.11"
    username: ((docker-username))
    password: ((docker-password))

- name: kubernetes-resource-image-1.12
  type: docker-image
  source:
    repository: zlabjp/kubernetes-resource
    tag: "1.12"
    username: ((docker-username))
    password: ((docker-password))

- name: kubernetes-resource-image-latest
  type: docker-image
  source:
    repository: zlabjp/kubernetes-resource
    tag: "latest"
    username: ((docker-username))
    password: ((docker-password))


- name: kubernetes-resource-image-edge
  type: docker-image
  source:
    repository: zlabjp/kubernetes-resource
    tag: edge
    username: ((docker-username))
    password: ((docker-password))


- name: stable-1.6
  type: file-url
  source:
    url: https://storage.googleapis.com/kubernetes-release/release/stable-1.6.txt
    filename: version

- name: stable-1.7
  type: file-url
  source:
    url: https://storage.googleapis.com/kubernetes-release/release/stable-1.7.txt
    filename: version

- name: stable-1.8
  type: file-url
  source:
    url: https://storage.googleapis.com/kubernetes-release/release/stable-1.8.txt
    filename: version

- name: stable-1.9
  type: file-url
  source:
    url: https://storage.googleapis.com/kubernetes-release/release/stable-1.9.txt
    filename: version

- name: stable-1.10
  type: file-url
  source:
    url: https://storage.googleapis.com/kubernetes-release/release/stable-1.10.txt
    filename: version

- name: stable-1.11
  type: file-url
  source:
    url: https://storage.googleapis.com/kubernetes-release/release/stable-1.11.txt
    filename: version

- name: stable-1.12
  type: file-url
  source:
    url: https://storage.googleapis.com/kubernetes-release/release/stable-1.12.txt
    filename: version

- name: latest
  type: file-url
  source:
    url: https://storage.googleapis.com/kubernetes-release/release/latest.txt
    filename: version


jobs:
- name: build-kubernetes-resource-image-edge
  public: true
  serial: true
  plan:
  - do:
    - aggregate:
      - get: kubernetes-resource
        trigger: true
      - get: ubuntu-18.04
        params: {save: true}
        trigger: true
      - get: latest
        trigger: true
    - task: build-build-args-file
      file: kubernetes-resource/ci/tasks/build-build-args-file.yml
      input_mapping: {version: latest}
    - put: kubernetes-resource-image-edge
      params:
        build: kubernetes-resource
        load_base: ubuntu-18.04
        build_args_file: output/build-args-file
    on_success:
      put: notify
      params:
        channel: ((slack-success-channel))
        username: concourse / kubernetes-resource-image-edge
        icon_emoji: ":dancing-penguin:"
        text: |
          Success! $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
    on_failure:
      put: notify
      params:
        channel: ((slack-failure-channel))
        username: concourse / kubernetes-resource:edge
        icon_emoji: ":rage:"
        text: |
          Failure! $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME


- name: build-kubernetes-resource-image-1.6
  public: true
  serial: true
  plan:
  - do:
    - aggregate:
      - get: kubernetes-resource-release
        trigger: true
      - get: ubuntu-18.04
        params: {save: true}
        trigger: true
      - get: stable-1.6
        trigger: true
    - task: build-build-args-file
      file: kubernetes-resource-release/ci/tasks/build-build-args-file.yml
      input_mapping: {version: stable-1.6}
    - put: kubernetes-resource-image-1.6
      params:
        build: kubernetes-resource-release
        load_base: ubuntu-18.04
        build_args_file: output/build-args-file
    on_success:
      put: notify
      params:
        channel: ((slack-success-channel))
        username: concourse / kubernetes-resource-image-1.6
        icon_emoji: ":dancing-penguin:"
        text: |
          Success! $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
    on_failure:
      put: notify
      params:
        channel: ((slack-failure-channel))
        username: concourse / kubernetes-resource-image-1.6
        icon_emoji: ":rage:"
        text: |
          Failure! $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

- name: build-kubernetes-resource-image-1.7
  public: true
  serial: true
  plan:
  - do:
    - aggregate:
      - get: kubernetes-resource-release
        trigger: true
      - get: ubuntu-18.04
        params: {save: true}
        trigger: true
      - get: stable-1.7
        trigger: true
    - task: build-build-args-file
      file: kubernetes-resource-release/ci/tasks/build-build-args-file.yml
      input_mapping: {version: stable-1.7}
    - put: kubernetes-resource-image-1.7
      params:
        build: kubernetes-resource-release
        load_base: ubuntu-18.04
        build_args_file: output/build-args-file
    on_success:
      put: notify
      params:
        channel: ((slack-success-channel))
        username: concourse / kubernetes-resource-image-1.7
        icon_emoji: ":dancing-penguin:"
        text: |
          Success! $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
    on_failure:
      put: notify
      params:
        channel: ((slack-failure-channel))
        username: concourse / kubernetes-resource-image-1.7
        icon_emoji: ":rage:"
        text: |
          Failure! $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

- name: build-kubernetes-resource-image-1.8
  public: true
  serial: true
  plan:
  - do:
    - aggregate:
      - get: kubernetes-resource-release
        trigger: true
      - get: ubuntu-18.04
        params: {save: true}
        trigger: true
      - get: stable-1.8
        trigger: true
    - task: build-build-args-file
      file: kubernetes-resource-release/ci/tasks/build-build-args-file.yml
      input_mapping: {version: stable-1.8}
    - put: kubernetes-resource-image-1.8
      params:
        build: kubernetes-resource-release
        load_base: ubuntu-18.04
        build_args_file: output/build-args-file
    on_success:
      put: notify
      params:
        channel: ((slack-success-channel))
        username: concourse / kubernetes-resource-image-1.8
        icon_emoji: ":dancing-penguin:"
        text: |
          Success! $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
    on_failure:
      put: notify
      params:
        channel: ((slack-failure-channel))
        username: concourse / kubernetes-resource-image-1.8
        icon_emoji: ":rage:"
        text: |
          Failure! $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

- name: build-kubernetes-resource-image-1.9
  public: true
  serial: true
  plan:
  - do:
    - aggregate:
      - get: kubernetes-resource-release
        trigger: true
      - get: ubuntu-18.04
        params: {save: true}
        trigger: true
      - get: stable-1.9
        trigger: true
    - task: build-build-args-file
      file: kubernetes-resource-release/ci/tasks/build-build-args-file.yml
      input_mapping: {version: stable-1.9}
    - put: kubernetes-resource-image-1.9
      params:
        build: kubernetes-resource-release
        load_base: ubuntu-18.04
        build_args_file: output/build-args-file
    on_success:
      put: notify
      params:
        channel: ((slack-success-channel))
        username: concourse / kubernetes-resource-image-1.9
        icon_emoji: ":dancing-penguin:"
        text: |
          Success! $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
    on_failure:
      put: notify
      params:
        channel: ((slack-failure-channel))
        username: concourse / kubernetes-resource-image-1.9
        icon_emoji: ":rage:"
        text: |
          Failure! $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

- name: build-kubernetes-resource-image-1.10
  public: true
  serial: true
  plan:
  - do:
    - aggregate:
      - get: kubernetes-resource-release
        trigger: true
      - get: ubuntu-18.04
        params: {save: true}
        trigger: true
      - get: stable-1.10
        trigger: true
    - task: build-build-args-file
      file: kubernetes-resource-release/ci/tasks/build-build-args-file.yml
      input_mapping: {version: stable-1.10}
    - put: kubernetes-resource-image-1.10
      params:
        build: kubernetes-resource-release
        load_base: ubuntu-18.04
        build_args_file: output/build-args-file
    on_success:
      put: notify
      params:
        channel: ((slack-success-channel))
        username: concourse / kubernetes-resource-image-1.10
        icon_emoji: ":dancing-penguin:"
        text: |
          Success! $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
    on_failure:
      put: notify
      params:
        channel: ((slack-failure-channel))
        username: concourse / kubernetes-resource-image-1.10
        icon_emoji: ":rage:"
        text: |
          Failure! $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

- name: build-kubernetes-resource-image-1.11
  public: true
  serial: true
  plan:
  - do:
    - aggregate:
      - get: kubernetes-resource-release
        trigger: true
      - get: ubuntu-18.04
        params: {save: true}
        trigger: true
      - get: stable-1.11
        trigger: true
    - task: build-build-args-file
      file: kubernetes-resource-release/ci/tasks/build-build-args-file.yml
      input_mapping: {version: stable-1.11}
    - put: kubernetes-resource-image-1.11
      params:
        build: kubernetes-resource-release
        load_base: ubuntu-18.04
        build_args_file: output/build-args-file
    on_success:
      put: notify
      params:
        channel: ((slack-success-channel))
        username: concourse / kubernetes-resource-image-1.11
        icon_emoji: ":dancing-penguin:"
        text: |
          Success! $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
    on_failure:
      put: notify
      params:
        channel: ((slack-failure-channel))
        username: concourse / kubernetes-resource-image-1.11
        icon_emoji: ":rage:"
        text: |
          Failure! $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

- name: build-kubernetes-resource-image-1.12
  public: true
  serial: true
  plan:
  - do:
    - aggregate:
      - get: kubernetes-resource-release
        trigger: true
      - get: ubuntu-18.04
        params: {save: true}
        trigger: true
      - get: stable-1.12
        trigger: true
    - task: build-build-args-file
      file: kubernetes-resource-release/ci/tasks/build-build-args-file.yml
      input_mapping: {version: stable-1.12}
    - put: kubernetes-resource-image-1.12
      params:
        build: kubernetes-resource-release
        load_base: ubuntu-18.04
        build_args_file: output/build-args-file
    on_success:
      put: notify
      params:
        channel: ((slack-success-channel))
        username: concourse / kubernetes-resource-image-1.12
        icon_emoji: ":dancing-penguin:"
        text: |
          Success! $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
    on_failure:
      put: notify
      params:
        channel: ((slack-failure-channel))
        username: concourse / kubernetes-resource-image-1.12
        icon_emoji: ":rage:"
        text: |
          Failure! $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

- name: build-kubernetes-resource-image-latest
  public: true
  serial: true
  plan:
  - do:
    - aggregate:
      - get: kubernetes-resource-release
        trigger: true
      - get: ubuntu-18.04
        params: {save: true}
        trigger: true
      - get: latest
        trigger: true
    - task: build-build-args-file
      file: kubernetes-resource-release/ci/tasks/build-build-args-file.yml
      input_mapping: {version: latest}
    - put: kubernetes-resource-image-latest
      params:
        build: kubernetes-resource-release
        load_base: ubuntu-18.04
        build_args_file: output/build-args-file
    on_success:
      put: notify
      params:
        channel: ((slack-success-channel))
        username: concourse / kubernetes-resource-image-latest
        icon_emoji: ":dancing-penguin:"
        text: |
          Success! $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
    on_failure:
      put: notify
      params:
        channel: ((slack-failure-channel))
        username: concourse / kubernetes-resource-image-latest
        icon_emoji: ":rage:"
        text: |
          Failure! $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

